version: "3.8"

services:
  course:
    container_name: course-core
    build:
      context: ./course
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
#      - "5005:5005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/course
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL-AUTO=none
      - FILES.API.URL=http://192.168.0.129:8090
    depends_on:
      postgres:
        condition: service_started
  postgres:
    container_name: postgres
    image: 'postgres:13.1-alpine'
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
  course-file-storage:
    container_name: course-file-storage
    build:
      context: ./course-file-storage
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
      - "5005:5005"
    environment:
      - SPRING.DATA.MONGODB.URI=mongodb://admin:admin@mongodatabase:27017/?authSource=files
      - SPRING.DATA.MONGODB.DATABASE=files
    depends_on:
      - mongodatabase
  mongodatabase:
    container_name: mongodb
    image: mongo:5.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: files
    volumes:
      - ./mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro