version: "3.8"
name: course

services:
  course:
    container_name: core
    build:
      context: ./course
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/course
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL-AUTO=none
      - FILES.API.URL=http://file-storage:8090
    depends_on:
      postgres:
        condition: service_started
  postgres:
    container_name: postgres
    image: 'postgres:13.1-alpine'
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init-database.sql:/docker-entrypoint-initdb.d/init-database.sql

  file-storage:
    container_name: file-storage
    build:
      context: ./course-file-storage
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
      - "5006:5005"
    environment:
      - URL=mongodb://admin:admin@mongodatabase:27017/?authSource=files
      - SPRING.DATA.MONGODB.URI=mongodb://admin:admin@mongodatabase:27017/?authSource=files
      - SPRING.DATA.MONGODB.DATABASE=files
    depends_on:
      mongodatabase:
        condition: service_started
  mongodatabase:
    container_name: mongodatabase
    image: mongo:5.0
    restart: on-failure
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: files
    volumes:
      - ./mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  course-bot:
    container_name: course-bot
    build:
      context: ./course-bot
      dockerfile: Dockerfile
    environment:
      - WEBHOOK.PATH=https://course-volsu-bot1.local.lt
      - CORE_API_URL=http://core:8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8070:8070"
      - "5007:5005"
    depends_on:
      - localtunnel
  redis:
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - TZ=Europe/Moscow
  localtunnel:
    image: efrecon/localtunnel
    container_name: localtunnel
    restart: on-failure
    command:
      --local-host host.docker.internal --port 8070 --subdomain course-volsu-bot1
  redis-ui:
    image: patrikx3/p3x-redis-ui:2022.10.111
    container_name: redis-ui
    ports:
      - "7843:7843"
    environment:
      - TZ=Europe/Moscow
    volumes:
      - /home/user/p3x-redis-ui-settings:/settings
    depends_on:
      - redis